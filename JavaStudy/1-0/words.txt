■ 開発
    ウォーターフォール開発：開発を各工程を段階的に踏みながら分けて進める方法。開発する機能をすべて同時進行で進める。
    アジャイル開発：クライアントの要望にできる限り早く応え、リリースする場合の手順。開発する機能のそれぞれの「企画」「設計」「実装」「テスト」を一通り最後まで通して、次の機能の開発に進む。
    マイグレーション：古いシステムやソフトウェアなどを新しいフラットフォームに移植すること。
    デグレーション：プログラムの修正や変更により、品質が悪化すること。
    デプロイ：開発した機能やサービスをサーバ上に配置して利用できるようにすること。最終的なリリースの準備段階の行程。
    コンフリクト：複数の装置やプログラムが同じ資源を同時に利用しようとして競合が起きること。
    環境
    開発環境（ローカル）
    検証環境（ステージング）
    本番環境
    設計書／仕様書
    要件定義
    基本設計書
    詳細設計書
    テスト
    単体テスト（UT）：Unit Test。システムの中の各機能を単体でテストすること。
    結合テスト（CT／IT）：Combined Test。いくつかのモジュールを組みあわえて行うテスト。
    総合テスト（ST）：System Test。総合テスト。本番同様の環境でのテスト。開発したシステムが意図通りに動作し、仕様書通りに機能するかのテスト。
    エビデンス／証跡：システムのテスト工程で正しく動作、あるいは発生した不具合を示す証拠のようなもの。画面キャプチャやデータファイル、ログデータなどが用いられる。
    データパッチ：プログラムの修正を加えるための後付けのプログラム。
    Access：Microsoft社のデータベースを使った業務用アプリを簡単に作成できるソフト。
    マクロ
    VBA
    GAS（Google Apps Script）
    API：Application Programming Interface。ソフトウェアが外部とやりとりするためのインターフェイス。
    WEB API：Web上で公開されいる、外部から呼び出して利用できるAPI。Amazon上の商品を自身のサイトで販売するなどの例がある。
    REST API
    SOAP
    Ajax
    XML
    JSON
    ステータスコード
    クロスオリジン（Cross-Origin）／CORS（Cross-Origin Resource Sharing）
    バリデーション
    データ連携
    Daemon
    CRON
    バッチ
    ログ
    CSV
    TSV
    プルリクエスト（マージリクエスト）

■ チケット管理ツール
    asana
    Backlog
    Jooto
    Readmine
    Trello

■ バージョン管理
    集中型
    分散型
    Github
    Backlog
    SourceTree
    Tortoise SVN
    Git Flow
    master
    release
    develop
    feature

■ FW／ライブラリ
    FW
    Spring Framework
    Struts
    JSF（Java Server Faces）
    ライブラリ
    Bootstrap
    Flyway
    Jackson
    jQuery
    Junit
    Log4j
    Lombok
    ORM

■ 連絡ツール
    ChatWork
    Slack
    IP Messenger

■ Java
    Javadoc
    アノテーション
    メモリ管理
    ヒープ
    GC
    GoF
    デザインパターン

■ その他
    オブジェクト指向
    バッチ処理
    コンパイル
    カバレッジ
    プラットホーム
